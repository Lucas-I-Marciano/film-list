/* As I want that this modal.css to be an independent file, it is expected to bring the variables too */
:root {
  --primary-color: #588157;
  --light-primary: #a3b18a;
  --lightest-color: #dad7cd;
  --secondary-color: #344e41;
  --light-secondary: #3a5a40;
}

#modal-overlay {
  display: flex;
  /* I want to overlay at the same location everytime */
  position: fixed;
  top: 0;
  left: 0;
  /* vw = view window */
  width: 100vw;
  height: 100dvh;
  justify-content: center;
  align-items: center;
  color: green;
}

/* As ID formatation have more power than class, I will add this class to #modal-container to handle with visibility */
.hidden {
  visibility: hidden;
  transition: all 0.3s ease;
  opacity: 0;
}

.open {
  visibility: visible;
  opacity: 1;
}

#modal-background {
  background-color: var(--light-primary);
  width: 100%;
  height: 100%;
  /* position: fixed allows me to do not separate my sreen for the two children of <article id="modal-overlay"> */
  position: fixed;
  z-index: 0;
  opacity: 0.4;
}

#modal-container {
  /* z-index: 1 it is as if I have layers under the father tag and I will put each children in 1 layer (specified number)*/
  z-index: 1;
  background-color: var(--lightest-color);
  padding: 1rem 3rem;
  border-radius: 10px;
}

#movie-title {
  padding: 0.5rem 0;
}

#modal-body {
  display: flex;
  justify-content: center;
  padding-bottom: 0.5rem;
}

#movie-poster {
  border-radius: 10px;
}

#movie-info {
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  max-width: 300px;
  padding-left: 2rem;
}

#add-to-list {
  border: 2px solid var(--light-primary);
  padding: 0.3rem 0;
  width: 100%;
  border-radius: 10px;
  font-weight: bold;
  box-shadow: 2px 2px 10px black;
}

#add-to-list:focus,
#add-to-list:hover {
  background-color: var(--light-primary);
  color: var(--lightest-color);
}
